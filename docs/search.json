[{"path":"https://github.com/mutopsy/coglyphr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hiroyuki Muto. Author, maintainer.","code":""},{"path":"https://github.com/mutopsy/coglyphr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Muto H (2025). coglyphr: Compute Glyph Centers Gravity Image Data. R package version 1.0.0, https://github.com/mutopsy/coglyphr.","code":"@Manual{,   title = {coglyphr: Compute Glyph Centers of Gravity from Image Data},   author = {Hiroyuki Muto},   year = {2025},   note = {R package version 1.0.0},   url = {https://github.com/mutopsy/coglyphr}, }"},{"path":[]},{"path":"https://github.com/mutopsy/coglyphr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Compute Glyph Centers of Gravity from Image Data","text":"coglyphr R package computing center gravity (COG) character-like binary images using three different methods. package provides functions estimating stroke-based, contour-based, potential energy-based COG. useful analyzing glyph structure areas visual cognition research font development. current version supports following COG computation methods: Stroke-based COG (cog_stroke) Contour-based COG (cog_contour), based method proposed Kotani colleagues (2004, 2011) Potential energy-based COG (cog_potential), based method proposed Kotani colleagues (2006) details function, refer function references.","code":""},{"path":"https://github.com/mutopsy/coglyphr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compute Glyph Centers of Gravity from Image Data","text":"can install coglyphr GitHub using devtools:","code":"# Install devtools if not already installed if (!requireNamespace(\"devtools\", quietly = TRUE)) install.packages(\"devtools\")  # Install coglyphr devtools::install_github(\"mutopsy/coglyphr\")"},{"path":"https://github.com/mutopsy/coglyphr/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Compute Glyph Centers of Gravity from Image Data","text":"package requires: * R (>= 4.4.0) * dplyr * imager * sp","code":""},{"path":"https://github.com/mutopsy/coglyphr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Compute Glyph Centers of Gravity from Image Data","text":"installation, can load package using library function.","code":"library(coglyphr)"},{"path":"https://github.com/mutopsy/coglyphr/index.html","id":"version-history","dir":"","previous_headings":"","what":"Version History","title":"Compute Glyph Centers of Gravity from Image Data","text":"See Changelog pkgdown site full changelog.","code":""},{"path":"https://github.com/mutopsy/coglyphr/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Compute Glyph Centers of Gravity from Image Data","text":"Kotani, . (2011). Contour-based evaluation method center gravity characters application font development. Memoirs Shonan Institute Technology, 45(1), 23–33. https://shonan-.repo.nii.ac.jp/?action=repository_view_main_item_detail&item_id=368 Kotani, ., Asai, Y., Nakamura, Y., Otuka, M., Mituyama, Y., & Onoye, T. (2004). Contour-based evaluation method center gravity “LCFONT.” IPSJ SIG Technical Report, 115, 63–70. https://ipsj.ixsq.nii.ac.jp/records/36793 Kotani, ., Tanemura, Y., Mitsuyama, Y., Asai, Y., Nakamura, Y., & Onoye, T. (2006). Potential energy-based center gravity evaluation characters. Journal Institute Image Electronics Engineers Japan, 35(4), 296–305. https://doi.org/10.11371/iieej.35.296","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_contour.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Contour-Based Center of Gravity (COG) — cog_contour","title":"Compute Contour-Based Center of Gravity (COG) — cog_contour","text":"Computes center gravity (COG) character-like binary image using outer contour.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_contour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Contour-Based Center of Gravity (COG) — cog_contour","text":"","code":"cog_contour(img, origin = c(\"bottomleft\", \"topleft\"))"},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_contour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Contour-Based Center of Gravity (COG) — cog_contour","text":"img image input, either file path image file (e.g., PNG, JPEG), cimg object imager package. image binary form, foreground (glyph) values equal 1 background values equal 1. origin character string indicating location image origin. Use \"bottomleft\" (default) y-axis increases upward (Cartesian), \"topleft\" y-axis increases downward (image arrays).","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_contour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Contour-Based Center of Gravity (COG) — cog_contour","text":"list containing: statistics data frame following components: center_x, center_y: (x, y) coordinates COG pixel coordinates input image. center_x_trim, center_y_trim: COG coordinates relative trimmed glyph region, excluding image margins. center_x_std, center_y_std: standardized COG coordinates ranging 0 1, based trimmed region's width height. margin_left, margin_right, margin_top, margin_bottom: Margins glyph image boundary. width_original, height_original: Dimensions original image. width_trim, height_trim: Width height trimmed glyph region, excluding margins. area: number pixels inside convex hull (.e., total mass used compute COG). points data frame (x, y) coordinates representing contour points convex polygon.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_contour.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Contour-Based Center of Gravity (COG) — cog_contour","text":"contour-based method, center gravity (COG) defined geometrical centroid convex hull (smallest convex polygon) encloses stroke region character. convex hull estimated tracing outer contour glyph computing minimal convex polygon wraps stroke pixels, .e., foreground pixels whose intensity values equal 1 (pure white). centroid calculated arithmetic mean (x, y) coordinates pixels located within interior convex polygon. Mathematically, contour-based center gravity \\((G_x, G_y)\\) defined weighted mean pixel coordinates within polygon region, pixel contributes value 1 (unit mass) background pixels excluded. Specifically, let \\(p(x, y)\\) indicator function \\(p(x, y) = 1\\) pixel \\((x, y)\\) lies inside convex polygon \\(p(x, y) = 0\\) otherwise. horizontal vertical components COG computed : $$ G_x = (\\sum_{x=1}^{w} \\sum_{y=1}^{h} p(x, y) \\cdot x) / (\\sum_{x=1}^{w} \\sum_{y=1}^{h} p(x, y)) $$ $$ G_y = (\\sum_{x=1}^{w} \\sum_{y=1}^{h} p(x, y) \\cdot y) / (\\sum_{x=1}^{w} \\sum_{y=1}^{h} p(x, y)) $$ \\(w\\) \\(h\\) denote width height image, respectively. method originally proposed Kotani colleagues (2004, 2011) used character analysis font design reflect perceived shape glyphs robustly simple stroke averaging.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_contour.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Contour-Based Center of Gravity (COG) — cog_contour","text":"Kotani, . (2011). Contour-based evaluation method center gravity characters application font development. Memoirs Shonan Institute Technology, 45(1), 23–33. https://shonan-.repo.nii.ac.jp/?action=repository_view_main_item_detail&item_id=368 Kotani, ., Asai, Y., Nakamura, Y., Otuka, M., Mituyama, Y., & Onoye, T. (2004). Contour-based evaluation method center gravity “LCFONT.” IPSJ SIG Technical Report, 115, 63–70. https://ipsj.ixsq.nii.ac.jp/records/36793","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_contour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Contour-Based Center of Gravity (COG) — cog_contour","text":"","code":"if (FALSE) { # \\dontrun{   cog_contour(img_A, origin = \"bottomleft\") } # }"},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_contour2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — cog_contour2","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — cog_contour2","text":"Calculates center gravity (COG) character-like binary image based outer contour. function implements method proposed Kotani colleagues (2004, 2011), COG computed geometric center smallest convex polygon (convex hull) encloses character region. outer contour traced counterclockwise starting bottommost-leftmost pixel, resulting closed shape filled compute centroid.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_contour2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — cog_contour2","text":"","code":"cog_contour2(img, origin = c(\"bottomleft\", \"topleft\"))"},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_contour2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — cog_contour2","text":"img image input, either file path image file (e.g., PNG, JPEG), cimg object imager package. image binary form, foreground (glyph) values equal 1 background values equal 1. origin character string indicating location image origin. Use \"bottomleft\" (default) y-axis increases upward (Cartesian), \"topleft\" y-axis increases downward (image arrays).","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_contour2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — cog_contour2","text":"list containing: statistics data frame computed center coordinates (original, trimmed, standardized), margins around glyph, original image dimensions. center calculated centroid smallest convex polygon enclosing glyph region. points data frame (x, y) coordinates representing contour points convex polygon.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_contour2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — cog_contour2","text":"Kotani, . (2011). Contour-based evaluation method center gravity characters application font development. Memoirs Shonan Institute Technology, 45(1), 23–33. https://shonan-.repo.nii.ac.jp/?action=repository_view_main_item_detail&item_id=368 Kotani, ., Asai, Y., Nakamura, Y., Otuka, M., Mituyama, Y., & Onoye, T. (2004). Contour-based evaluation method center gravity “LCFONT.” IPSJ SIG Technical Report, 115, 63–70. https://ipsj.ixsq.nii.ac.jp/records/36793","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_contour2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — cog_contour2","text":"","code":"if (FALSE) { # \\dontrun{   cog_contour(img_A, origin = \"bottomleft\") } # }"},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_potential.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential","text":"Calculates center gravity (COG) character-like binary image based potential energy.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_potential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential","text":"","code":"cog_potential(img, origin = c(\"bottomleft\", \"topleft\"))"},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_potential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential","text":"img image input, either file path image file (e.g., PNG, JPEG), cimg object imager package. image binary form, foreground (glyph) values equal 1 background values equal 1. origin character string indicating location image origin. Use \"bottomleft\" (default) y-axis increases upward (Cartesian), \"topleft\" y-axis increases downward (image arrays).","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_potential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential","text":"list containing: statistics data frame following components: center_x, center_y: (x, y) coordinates COG pixel coordinates input image. center_x_trim, center_y_trim: COG coordinates relative trimmed glyph region, excluding image margins. center_x_std, center_y_std: standardized COG coordinates ranging 0 1, based trimmed region's width height. margin_left, margin_right, margin_top, margin_bottom: Margins glyph image boundary. width_original, height_original: Dimensions original image. width_trim, height_trim: Width height trimmed glyph region, excluding margins. potentials data frame containing (x, y) coordinates normalized potential value pixel within convex hull. potentials normalized sum equals 1.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_potential.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential","text":"potential energy-based method, center gravity (COG) defined weighted mean coordinates pixels within convex hull stroke region, weight pixel determined potential induced stroke pixels. method assumes stroke pixel contributes unit mass exerts attractive force pixels within convex polygon, inversely proportional distance, modeling simplified gravitational interaction. avoid excessive computation, unintended influence remote regions, restrict analysis perceptually relevant area, potential computed within convex polygon (.e., region used contour-based COG calculation), rather across entire image. Let \\(S\\) set stroke pixels, let \\(R\\) set pixels within convex polygon region. potential pixel \\((x, y) \\R\\) defined : $$ p(x, y) = \\sum_{\\substack{(x', y') \\S \\\\ (x', y') \\ne (x, y)}} \\frac{1}{\\sqrt{(x - x')^2 + (y - y')^2}} $$ , potential point \\(R\\) sum inverse distances stroke pixels \\(S\\), excluding case \\((x', y') = (x, y)\\). Pixels outside convex polygon assigned potential value zero contribute COG calculation. , center gravity computed : $$ G_x = \\left( \\sum_{(x, y) \\R} p(x, y) \\cdot x \\right) / \\left( \\sum_{(x, y) \\R} p(x, y) \\right) $$ $$ G_y = \\left( \\sum_{(x, y) \\R} p(x, y) \\cdot y \\right) / \\left( \\sum_{(x, y) \\R} p(x, y) \\right) $$ words, COG corresponds weighted mean pixel coordinates convex region, weights given potential values induced distribution stroke pixels. method originally proposed Kotani et al. (2006) used character analysis font design reflect perceived shape glyphs robustly simple stroke averaging, improve upon contour-based COG incorporating spatial distribution strokes within convex polygon, thereby aligning closely subjective impression character's center.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_potential.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential","text":"Kotani, ., Tanemura, Y., Mitsuyama, Y., Asai, Y., Nakamura, Y., & Onoye, T. (2006). Potential energy-based center gravity evaluation characters. Journal Institute Image Electronics Engineers Japan, 35(4), 296–305. https://doi.org/10.11371/iieej.35.296","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_potential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential","text":"","code":"if (FALSE) { # \\dontrun{   cog_potential(img_A, origin = \"bottomleft\") } # }"},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_potential2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential2","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential2","text":"Calculates center gravity (COG) character-like binary image based potential energy. function implements method proposed Kotani et al. (2006), COG defined potential energy-weighted mean within smallest convex polygon (.e., convex hull) encloses character region. pixel stroke region treated point mass unit mass. potential pixel computed sum inverses distances pixel pixels stroke region.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_potential2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential2","text":"","code":"cog_potential2(img, origin = c(\"bottomleft\", \"topleft\"))"},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_potential2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential2","text":"img image input, either file path image file (e.g., PNG, JPEG), cimg object imager package. image binary form, foreground (glyph) values equal 1 background values equal 1. origin character string indicating location image origin. Use \"bottomleft\" (default) y-axis increases upward (Cartesian), \"topleft\" y-axis increases downward (image arrays).","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_potential2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential2","text":"list containing: statistics data frame computed center coordinates (original, trimmed, standardized), margins around glyph, original image dimensions. center calculated centroid smallest convex polygon enclosing glyph region. potentials data frame containing (x, y) coordinates normalized potential value pixel within convex hull. potentials normalized sum equals 1.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_potential2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential2","text":"Kotani, ., Tanemura, Y., Mitsuyama, Y., Asai, Y., Nakamura, Y., & Onoye, T. (2006). Potential energy-based center gravity evaluation characters. Journal Institute Image Electronics Engineers Japan, 35(4), 296–305. https://doi.org/10.11371/iieej.35.296","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_potential2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Potential Energy-Based Center of Gravity (COG) — cog_potential2","text":"","code":"if (FALSE) { # \\dontrun{   cog_potential(img_A, origin = \"bottomleft\") } # }"},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_stroke.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke","text":"Computes center gravity (COG) character-like binary image using stroke region.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_stroke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke","text":"","code":"cog_stroke(img, origin = c(\"bottomleft\", \"topleft\"))"},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_stroke.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke","text":"img image input, either file path image file (e.g., PNG, JPEG), cimg object imager package. image binary form, foreground (glyph) values equal 1 background values equal 1. origin character string indicating location image origin. Use \"bottomleft\" (default) y-axis increases upward (Cartesian), \"topleft\" y-axis increases downward (image arrays).","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_stroke.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke","text":"list containing: statistics data frame following components: center_x, center_y: (x, y) coordinates COG pixel coordinates input image. center_x_trim, center_y_trim: COG coordinates relative trimmed glyph region, excluding image margins. center_x_std, center_y_std: standardized COG coordinates ranging 0 1, based trimmed region's width height. margin_left, margin_right, margin_top, margin_bottom: Margins glyph image boundary. width_original, height_original: Dimensions original image. width_trim, height_trim: Width height trimmed glyph region, excluding margins. area: number pixels stroke region (.e., total mass used compute COG). strokes data frame (x, y) coordinates representing stroke region (.e., non-white pixels).","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_stroke.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke","text":"stroke-based method, COG defined arithmetic mean (x, y) coordinates pixels belong stroke region, .e., foreground pixels whose intensity values equal 1 (pure white). approach assumes stroke pixel unit mass contributes equally center calculation. image assumed binary, background pixels value 1, pixels treated part glyph. Mathematically, stroke-based center gravity \\((G_x, G_y)\\) defined weighted mean pixel coordinates within stroke region, pixel contributes value 1 (unit mass) background pixels excluded. Specifically, let \\(p(x, y)\\) indicator function \\(p(x, y) = 1\\) pixel \\((x, y)\\) belongs stroke region, \\(p(x, y) = 0\\) otherwise. horizontal vertical components COG computed : $$ G_x = (\\sum_{x=1}^{w} \\sum_{y=1}^{h} p(x, y) \\cdot x) / (\\sum_{x=1}^{w} \\sum_{y=1}^{h} p(x, y)) $$ $$ G_y = (\\sum_{x=1}^{w} \\sum_{y=1}^{h} p(x, y) \\cdot y) / (\\sum_{x=1}^{w} \\sum_{y=1}^{h} p(x, y)) $$ \\(w\\) \\(h\\) denote width height image, respectively.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/COG_stroke.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke","text":"","code":"if (FALSE) { # \\dontrun{   cog_stroke(img_A, origin = \"bottomleft\") } # }"},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_stroke2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke2","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke2","text":"Computes center gravity (COG) character-like binary image using stroke region. COG defined mean (x, y) coordinates non-white pixels.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_stroke2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke2","text":"","code":"cog_stroke2(img, origin = c(\"bottomleft\", \"topleft\"))"},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_stroke2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke2","text":"img image input, either file path image file (e.g., PNG, JPEG), cimg object imager package. image binary form, foreground (glyph) values equal 1 background values equal 1. origin character string indicating location image origin. Use \"bottomleft\" (default) y-axis increases upward (Cartesian), \"topleft\" y-axis increases downward (image arrays).","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_stroke2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke2","text":"list containing: statistics data frame computed center coordinates (original, trimmed, standardized), margins around glyph, original image dimensions. center calculated based stroke region strokes data frame (x, y) coordinates representing stroke (non-white) region.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/cog_stroke2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Stroke-Based Center of Gravity (COG) — cog_stroke2","text":"","code":"if (FALSE) { # \\dontrun{   cog_stroke(img_A, origin = \"bottomleft\") } # }"},{"path":"https://github.com/mutopsy/coglyphr/reference/contourCOG.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — contourCOG","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — contourCOG","text":"Calculates center gravity (COG) character-like binary image based outer contour. function implements method proposed Kotani colleagues (2004, 2011), COG computed geometric center smallest convex polygon (convex hull) encloses character region. outer contour traced counterclockwise starting bottommost-leftmost pixel, resulting closed shape filled compute centroid.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/contourCOG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — contourCOG","text":"","code":"contourCOG(img, origin = c(\"bottomleft\", \"topleft\"))"},{"path":"https://github.com/mutopsy/coglyphr/reference/contourCOG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — contourCOG","text":"img image input, either file path image file (e.g., PNG, JPEG), cimg object imager package. image binary form, foreground (glyph) values equal 1 background values equal 1. origin character string indicating location image origin. Use \"bottomleft\" (default) y-axis increases upward (Cartesian), \"topleft\" y-axis increases downward (image arrays).","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/contourCOG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — contourCOG","text":"list containing: statistics data frame computed center coordinates (original, trimmed, standardized), margins around glyph, original image dimensions. center calculated centroid smallest convex polygon enclosing glyph region. points data frame (x, y) coordinates representing contour points convex polygon.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/contourCOG.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Contour-Based Center of Gravity (COG) from Convex Polygon — contourCOG","text":"Kotani, . (2011). Contour-based evaluation method center gravity characters application font development. Memoirs Shonan Institute Technology, 45(1), 23–33. https://shonan-.repo.nii.ac.jp/?action=repository_view_main_item_detail&item_id=368 Kotani, ., Asai, Y., Nakamura, Y., Otuka, M., Mituyama, Y., & Onoye, T. (2004). Contour-based evaluation method center gravity “LCFONT.” IPSJ SIG Technical Report, 115, 63–70. https://ipsj.ixsq.nii.ac.jp/records/36793","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_contour.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Contour-Based Region and Center of Gravity (COG) — draw_contour","title":"Visualize Contour-Based Region and Center of Gravity (COG) — draw_contour","text":"Visualizes character region enclosed convex polygon computed using cog_contour. Optionally overlays crosshair lines computed center gravity (COG) aid interpretation.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_contour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Contour-Based Region and Center of Gravity (COG) — draw_contour","text":"","code":"draw_contour(lst, show_cog = TRUE, plot_image = TRUE)"},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_contour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Contour-Based Region and Center of Gravity (COG) — draw_contour","text":"lst list returned cog_contour, containing data frame polygon points computed statistics. show_cog Logical. TRUE (default), draws horizontal vertical red lines COG indicate location. plot_image Logical. TRUE (default), plots reconstructed image. FALSE, returns image object without displaying .","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_contour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Contour-Based Region and Center of Gravity (COG) — draw_contour","text":"object class cimg representing polygon-filled image (without COG lines), can used saved.","code":""},{"path":[]},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_contour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Contour-Based Region and Center of Gravity (COG) — draw_contour","text":"","code":"if (FALSE) { # \\dontrun{   result <- cog_contour(img_A)   draw_contour(result, show_cog = TRUE) } # }"},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_potential.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Potential-Based Center of Gravity (COG) and Potential Field — draw_potential","title":"Visualize Potential-Based Center of Gravity (COG) and Potential Field — draw_potential","text":"Visualizes normalized potential field center gravity (COG) computed cog_potential. pixel's potential shown grayscale intensity, darker pixels indicate higher potential. Optionally overlays crosshair lines computed COG indicate position.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_potential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Potential-Based Center of Gravity (COG) and Potential Field — draw_potential","text":"","code":"draw_potential(lst, show_cog = TRUE, plot_image = TRUE)"},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_potential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Potential-Based Center of Gravity (COG) and Potential Field — draw_potential","text":"lst list returned cog_potential, containing data frame normalized potentials computed statistics. show_cog Logical. TRUE (default), draws horizontal vertical red lines COG. plot_image Logical. TRUE (default), plots generated image. FALSE, returns image object without displaying .","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_potential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Potential-Based Center of Gravity (COG) and Potential Field — draw_potential","text":"object class cimg representing potential field image, optionally overlaid COG crosshair lines.","code":""},{"path":[]},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_potential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Potential-Based Center of Gravity (COG) and Potential Field — draw_potential","text":"","code":"if (FALSE) { # \\dontrun{   result <- cog_potential(img_A)   draw_potential(result, show_cog = TRUE) } # }"},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_stroke.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Stroke Region and Center of Gravity (COG) — draw_stroke","title":"Visualize Stroke Region and Center of Gravity (COG) — draw_stroke","text":"Visualizes stroke region character-like binary image using result cog_stroke(). Optionally overlays crosshair lines computed center gravity (COG) position.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_stroke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Stroke Region and Center of Gravity (COG) — draw_stroke","text":"","code":"draw_stroke(lst, show_cog = TRUE, plot_image = TRUE)"},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_stroke.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Stroke Region and Center of Gravity (COG) — draw_stroke","text":"lst list returned cog_stroke, containing stroke pixel data computed statistics. show_cog Logical. TRUE (default), draws horizontal vertical red lines COG visualize position. plot_image Logical. TRUE (default), plots image. FALSE, returns image object without plotting.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_stroke.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Stroke Region and Center of Gravity (COG) — draw_stroke","text":"object class cimg representing stroke image (without COG lines), suitable plotting manipulation.","code":""},{"path":[]},{"path":"https://github.com/mutopsy/coglyphr/reference/draw_stroke.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Stroke Region and Center of Gravity (COG) — draw_stroke","text":"","code":"if (FALSE) { # \\dontrun{   result <- cog_stroke(img_A)   draw_stroke(result, show_cog = TRUE) } # }"},{"path":"https://github.com/mutopsy/coglyphr/reference/img_A.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Image A — img_A","title":"Example Image A — img_A","text":"binary example image representing letter \"\". image used demonstrating center--gravity calculations coglyphr package.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/img_A.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Image A — img_A","text":"","code":"data(img_A)"},{"path":"https://github.com/mutopsy/coglyphr/reference/img_A.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Image A — img_A","text":"cimg object size 500 × 500 × 1 × 1 (width × height × depth × spectrum).","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/img_A.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Image A — img_A","text":"Created illustration coglyphr package.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/img_B.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Image B — img_B","title":"Example Image B — img_B","text":"binary example image representing letter \"B\". image used demonstrating center--gravity calculations coglyphr package.","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/img_B.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Image B — img_B","text":"","code":"data(img_B)"},{"path":"https://github.com/mutopsy/coglyphr/reference/img_B.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Image B — img_B","text":"cimg object size 500 × 500 × 1 × 1 (width × height × depth × spectrum).","code":""},{"path":"https://github.com/mutopsy/coglyphr/reference/img_B.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Image B — img_B","text":"Created illustration coglyphr package.","code":""},{"path":"https://github.com/mutopsy/coglyphr/news/index.html","id":"coglyphr-100","dir":"Changelog","previous_headings":"","what":"coglyphr 1.0.0","title":"coglyphr 1.0.0","text":"First stable release package. Provides three COG estimation methods: stroke-based, contour-based, potential energy-based. Includes documentation, test coverage, support binary glyph images. Suitable use glyph structure analysis image-based cognitive research.","code":""}]
